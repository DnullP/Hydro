import React, { useState } from 'react';
import { render, Text, Box, Newline } from 'ink';
export { render } from 'ink';

interface SingleBarProps {
    color?: string;
    name?: string;
    progress: number;
    description?: string;
}

export function SingleBar(props: SingleBarProps) {
    const width = 30;
    const fill = Math.floor(width * props.progress);

    return <Text>
        <Newline />
        <Text color={props.color}>‚óè {props.name} </Text>
        <Text backgroundColor={props.color}>{' '.repeat(Math.min(fill, width))}</Text>
        <Text backgroundColor="white">{' '.repeat(Math.max(width - fill, 0))}</Text>
        <Text color="white"> {Math.floor(props.progress * 100)}%</Text>
        <Newline />
        <Text color="grey">  {props.description}</Text>
    </Text>;
};

SingleBar.defaultProps = {
    color: 'green',
    name: 'progress',
    progress: 0,
    description: '',
}

const currentBars: SingleBarProps[] = [];
let inited = false;

let update = (bars) => { };
function Manager() {
    const [bars, setBars] = useState('[]');
    update = setBars;
    return <Box flexDirection="column">
        {JSON.parse(bars).map((bar: any, i) => {
            return <SingleBar key={i} {...bar} />
        })}
    </Box>;
}

export function create(name: string, color: string) {
    if (!inited) {
        render(<Manager />);
        inited = true;
    }
    const bar = {
        name,
        color,
        progress: 0,
        description: '',
    };
    currentBars.push(bar);
    return {
        update(progress: number, description: string) {
            bar.progress = progress;
            bar.description = description;
            update(JSON.stringify(currentBars));
        },
        done() {
            currentBars.splice(currentBars.indexOf(bar), 1);
            update(JSON.stringify(currentBars));
        }
    };
}
